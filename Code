//Janet-Rivera 2/4/15 RNG Displays 50 random #'s 1-100

#include <cstdlib>
#include <iostream>
#include <ctime>
#include <stdlib.h>
using namespace std;

bool BinarySearch ( int *array, int size, int value)
{
	if (size==0 || value< array [0] || value> array[size-1])
		return false;
	else
	{
		int i,j,k;
		i=0;
		j=size-1;
		while (i<j)
		{
			k=(i+j)/2;
			
			if (value< array[k])
				j=k-1;
			else if (value>= array[k+1])
				i=k+1;
			else
				i= j=k;
		}
		return (value== array[i]) ? true : false;
	}
}

int main ()

{ // number generator
	start:
	system ("cls");
	unsigned seed, randomNum;
	int answer, Array[50]; //declare 1 variable
	int counter=0;
	seed = ((unsigned int) time (0));
	srand(seed);
	for (int j=0; j<50; j++)
	{

	randomNum =1 +rand() % 100;
	//answer =(int)randomNum;
	Array[j]=randomNum;
	cout<<Array[j]<<endl;
	}
	//bubble sort for 50 numeric items
	cout<<"Sorting.... \n"<<endl;
		for (int i = 0; i < 49; i++)
			for (int j = 49; j > i; j--)
				if (Array[j-1] > Array[j])
				{
					int temp = Array[j-1];
					Array[j-1] = Array[j];
					Array[j] = temp;
				}
				// to display the 50 numeric items in the array
				for(int i=0; i<50; i++)
					cout<<Array[i]<<endl;
				
				//declare variable to store # to search for?
int guessnumber;

cout<< "Insert a number (0-99) to find: ";
cin>> guessnumber;
//Call the BinarySearch Function
if (BinarySearch(Array, 50, guessnumber))
	cout<<"The number you chose: " <<guessnumber<< " has been found!" <<endl;
else
	cout <<"There is no number in this array that could be found." <<endl;
				system ("pause");
				return 0;
}
